/**
 * 
 */
package fr.n7.stl.block.ast.impl;

import fr.n7.stl.block.ast.*;
import fr.n7.stl.tam.ast.Fragment;
import fr.n7.stl.tam.ast.Register;
import fr.n7.stl.tam.ast.TAMFactory;

/**
 * Implementation of the Abstract Syntax Tree node for a final static attribute declaration instruction.
 * @author 
 */
public class FinalStaticAttributeDeclarationImpl implements AttributeDeclaration, ElementInterface {

	private Type type;
	private Expression value;
	private String name;
	
	public FinalStaticAttributeDeclarationImpl(String _name, Type _type, Expression _value){
        name = _name;
		value = _value;
		type = _type;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	public String toString() {
		String _static = "static";
		String _final = "final";
		
		return _final +" "+_static+ " " +this.type + " " + this.name + ";";
	}

	@Override
	public Type getType() {
		return type;
	}

	@Override
    public String getName() {return name;}


	@Override
	public boolean getIsStatic() {
		return true;
	}

	@Override
	public boolean checkType() {
		return false;
	}

	@Override
	public int allocateMemory(Register _register, int _offset) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Fragment getCode(TAMFactory _factory) {
		// TODO Auto-generated method stub
		return null;
	}
}
