PROJET CAML 2015-2016

Description des fichiers fournis dans l'archive :
-------------------------------------------------

- picross_principal.cmo    : implantation compilée du module Picross_principal,
                             qui sert de programme principal.
- pixel.mli                : fichier source interface contenant les définitions des pixels.
- pixel.cmi                : interface compilée du module Pixel.
- pixel.cmo                : implantation compilée du module Pixel.
- memo.mli                 : fichier source interface contenant les fonctions de memoization.
- memo.cmi                 : interface compilée du module Memo.
- memo.cmo                 : implantation compilée du module Memo.
- bdd_base.mli             : fichier source interface contenant les fonctions de base sur les BDD.
- bdd_base.cmi             : interface compilée du module Bdd_base.
- bdd_base.cmo             : implantation compilée du module Bdd_base.
- picross_gen.mli          : fichier source interface du module principal contenant les déclarations 
                             devant être implantées.
- script_affichage.ml      : un script OCaml qui permet l'affichage des cases et des BDD directement
                             dans l'interprète. Utile au débogage.
- fibonacci_memo.ml        : un fichier exemple qui montre comment transformer une fonction ordinaire
                             en fonction memoizée beaucoup plus efficace en temps,
                             illustré sur la célèbre suite de Fibonacci.
- exemple1.pbm             : fichier texte contenant une description de grille pouvant être utilisée
                             par l'application principale, au format PBM.

Utilisation des fichiers fournis :
----------------------------------

A) Accéder aux définitions contenues dans les modules Pixel, Memo et Bdd_base :
   ----------------------------------------------------------------------------

   a) Soit par préfixage :

       let pix = Pixel.make 1 2;;

   b) Soit en ouvrant au préalable l'interface du module :
       
       open Pixel;;
       ...
       let pix = make 1 2;;


B) Compiler une application principale :
   -------------------------------------

   1) Compiler l'interface du module Picross_gen :

       ocamlc -c picross_gen.mli

   2) Compiler le module Picross_gen une fois défini (à chaque modification de celui-ci) :

       ocamlc -c picross_gen.ml

   3) Produire un exécutable (appelé ici 'picross') :

       ocamlc graphics.cma pixel.cmo memo.cmo bdd_base.cmo picross_gen.cmo picross_principal.cmo -o picross

   4) Lancer l'exécutable sur le fichier image FILE, au format PBM :

       ./picross FILE.pbm

C) Développer interactivement sous l'interprète ocaml :
   ----------------------------------------------------

   Lancer l'interprète en chargeant le code des modules Pixel, Memo et Bdd_base
   et en exécutant le script 'script_affichage' pour l'affichage des cases et des BDD :

       ocaml pixel.cmo memo.cmo bdd_base.cmo -init script_affichage.ml
